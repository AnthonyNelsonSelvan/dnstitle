services:
  backend:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-Backend
    container_name: backend_container
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      backend_network:
        ipv4_address: 172.20.0.10

  mongo:
    restart: always
    image: mongo:latest
    container_name: mongo_container
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      backend_network:
        ipv4_address: 172.20.0.11

  # Nginx service to serve the frontend
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-Frontend
    restart: always
    container_name: nginx-container
    ports:
      - "80:80"
    networks:
      frontend_network:
        ipv4_address: 172.21.0.11
      backend_network:
        ipv4_address: 172.20.0.13

  bind:
    restart: always
    build: ./bind9
    container_name: bind_container
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - ./bind9:/etc/bind
    networks:
      frontend_network:
        ipv4_address: 172.21.0.12
      backend_network:
        ipv4_address: 172.20.0.12

networks:
  backend_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

  frontend_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24

volumes:
  mongo-data:
    driver: local
